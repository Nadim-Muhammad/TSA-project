testdf(variable = residuals(cointegration), max.augmentations = 3)
testdf(variable = residuals(cointegration), max.augmentations = 3)
library(vars)
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
summary(johan.test.trace)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 2,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 6,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 3,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 2,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "none", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "none", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "eigen",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "eigen",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
summary(johan.test.trace)
data_xts_ln <- diff(data_xts)
data_xts_ln <- log(data_xts)
data_xts_backup<- data_xts
data_xts <- data_xts_ln
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts[,i],
max.augmentations = 3))
}
#4
#log 4
data_xts_diff <- diff.xts(data_xts)
#4
#log 4
data_xts_diff <- diff.xts(data_xts)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff[,i],
max.augmentations = 3))
}
View(data_xts)
View(data_xts_ln)
View(data_xts_diff)
data_xts <- data_xts_backup
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts[,i],
max.augmentations = 3))
}
#4
#log 4
data_xts_diff <- diff.xts(data_xts)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff[,i],
max.augmentations = 3))
}
setwd("C:\\Users\\Administrator\\OneDrive\\Pulpit\\studia\\MAGISTERSKIE\\Time Series Analysis\\labs\\labs #10")
options(scipen = 10)
library(tidyverse)
library(xts)
library(vars)
ppi_cpi <- read_csv("data/ppi_cpi.csv")
ppi_cpi %>% glimpse()
ppi_cpi %>% head()
ppi_cpi %>% tail()
ppi_cpi <- xts(ppi_cpi[, -1], ppi_cpi$date)
plot(ppi_cpi[, 1:2],
col = c("black", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Producer prices and consumer prices",
legend.loc = "topleft")
johan.test.trace <-
ca.jo(ppi_cpi, # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
summary(johan.test.trace)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegration <- lm(first ~ second -1, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegration <- lm(second ~ first, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones$first<- data_xts[,1]
chosen_ones$second<- data_xts[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
chosen_ones$first<- data_xts[,1]
chosen_ones$second<- data_xts[,3]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones$first<- data_xts[,3]
chosen_ones$second<- data_xts[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
?ca.jo
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 4)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12,
dumvar=12)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12,
dumvar=4)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
data_xts_diff2 <- diff.xts(data_xts_diff)
data_xts_diff2 <- diff.xts(data_xts_diff)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff2[,i],
max.augmentations = 3))
}
data_xts_diff3 <- diff.xts(data_xts_diff2)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff3[,i],
max.augmentations = 3))
}
data_xts_diff4 <- diff.xts(data_xts_diff3)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff4[,i],
max.augmentations = 3))
}
data_xts_diff5 <- diff.xts(data_xts_diff4)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_diff5[,i],
max.augmentations = 3))
}
length(data_xts)
head(data_xts)
view(data_xts)
data_xts_in <- data_xts[1:970,]
View(data_xts_in)
data_xts_out <- data_xts[971:1000,]
plot(data_xts_in,
col = c("black", "blue", "red", "purple", "green", "pink", "brown", "cyan", "magenta", "coral"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Something",
legend.loc = "bottomleft")
setwd("C:\\Users\\Administrator\\OneDrive\\Pulpit\\studia\\MAGISTERSKIE\\Time Series Analysis\\project")
options(scipen = 10)
source("functions/function_plot_ACF_PACF_resids.R")
source("functions/testdf.R")
data <- read.csv("data/TSA_2023_project_data_1.csv")
data$X <- as.Date(data$X, format = "%Y-%m-%d")
data_xts <- xts(data[, -1], order.by = data$X)
data_xts_in <- data_xts[1:970,]
data_xts_out <- data_xts[971:1000,]
data_xts_in <- data_xts[1:970,]
data_xts <- xts(data[, -1], order.by = data$X)
data_xts_in <- data_xts[1:970,]
data_xts_out <- data_xts[971:1000,]
plot(data_xts_in,
col = c("black", "blue", "red", "purple", "green", "pink", "brown", "cyan", "magenta", "coral"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Something",
legend.loc = "bottomleft")
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_in[,i],
max.augmentations = 3))
}
data_xts_in_diff <- diff.xts(data_xts_in)
for (i in 1:10) {
print(i)
print(testdf(variable = data_xts_in_diff[,i],
max.augmentations = 3))
}
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,3]
chosen_ones$second<- data_xts_in[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
#WE NEED A VAR LAG ORDER FIRST
johan.test.trace <-
ca.jo(chosen_ones, # data
ecdet = "trend", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 4,           # lag order of the series (levels) in the VAR
season = 12)
summary(johan.test.trace)
chosen_ones$first<- data_xts_in[,1]
chosen_ones$second<- data_xts_in[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,1]
chosen_ones$second<- data_xts_in[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,1]
chosen_ones$second<- data_xts_in[,3]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,1]
chosen_ones$second<- data_xts_in[,4]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,3]
chosen_ones$second<- data_xts_in[,4]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,9]
chosen_ones$second<- data_xts_in[,4]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
chosen_ones <- xts(order.by = data$X)
chosen_ones$first<- data_xts_in[,3]
chosen_ones$second<- data_xts_in[,9]
plot(chosen_ones)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
#first
testdf(variable = chosen_ones$first,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_first,
max.augmentations = 3)
#second
testdf(variable = chosen_ones$second,
max.augmentations = 3)
testdf(variable = chosen_ones$diff_second,
max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
