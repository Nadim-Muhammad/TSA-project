order = c(15, 1, 3),
fixed = c(NA, NA, NA, NA, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, NA,
NA, 0, NA))
coeftest(arima1513_fixed_second)
plot_ACF_PACF_resids(arima1513_fixed_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima1513_fixed_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima1513_fixed2_second <- Arima(chosen_ones$second,
order = c(15, 1, 3),
fixed = c(0, NA, NA, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, NA,
0, 0, NA))
coeftest(arima1513_fixed2_second)
plot_ACF_PACF_resids(arima1513_fixed2_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima1513_fixed2_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
AIC(arima111_second, arima313_second, arima1513_second, arima1513_fixed_second, arima1513_fixed2_second)
BIC(arima111_second, arima313_second, arima1513_second, arima1513_fixed_second, arima1513_fixed2_second)
arima1513_fixed_second_forecast <- forecast(arima1513_fixed_second, h=30)
arima1513_fixed_second_forecast
arima1513_fixed_second_forecast_data <- data.frame(f_mean  = as.numeric(arima1513_fixed_second_forecast$mean),
f_lower = as.numeric(arima1513_fixed_second_forecast$lower[, 2]),
f_upper = as.numeric(arima1513_fixed_second_forecast$upper[, 2]))
arima1513_fixed_second_forecast_data_xts <- xts(arima1513_fixed_second_forecast_data, order.by = data_test$X)
arima1513_fixed2_second_forecast <- forecast(arima1513_fixed2_second, h=30)
arima1513_fixed2_second_forecast
arima1513_fixed2_second_forecast_data <- data.frame(f_mean  = as.numeric(arima1513_fixed2_second_forecast$mean),
f_lower = as.numeric(arima1513_fixed2_second_forecast$lower[, 2]),
f_upper = as.numeric(arima1513_fixed2_second_forecast$upper[, 2]))
arima1513_fixed2_second_forecast_data_xts <- xts(arima1513_fixed2_second_forecast_data, order.by = data_test$X)
arima313_second_forecast <- forecast(arima313_second, h=30)
arima313_second_forecast
arima313_second_forecast_data <- data.frame(f_mean  = as.numeric(arima313_second_forecast$mean),
f_lower = as.numeric(arima313_second_forecast$lower[, 2]),
f_upper = as.numeric(arima313_second_forecast$upper[, 2]))
arima313_second_forecast_data_xts <- xts(arima313_second_forecast_data, order.by = data_test$X)
data_all_second_xts <- rbind(data_train_xts[,9], data_test_xts[,9])
names(data_all_second_xts) <- "second"
ARIMA_forecasts_second <- merge(data_all_second_xts,
arima1513_fixed_second_forecast_data_xts,
arima1513_fixed2_second_forecast_data_xts,
arima313_second_forecast_data_xts)
names(ARIMA_forecasts_second) <- c("Second Time Series", "arima1513_fixed mean", "arima1513_fixed 95% lower", "arima1513_fixed 95% upper", "arima1513_fixed2 mean", "arima1513_fixed2 95% lower", "arima1513_fixed2 95% upper", "arima313 mean", "arima313 95% lower", "arima313 95% upper")
plot(ARIMA_forecasts_second["2020-11/",],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of chosen time series",
col = c("black", "blue", "red", "red", "green", "pink", "pink", "cyan", "magenta", "magenta"),
legend.loc = "bottomleft")
ecm_model <- lm(diff_first ~ diff_second + lag_resid_coint, data = chosen_ones)
ecm_model <- lm(diff_first ~ diff_second + lag_resid_coint -1, data = chosen_ones)
summary(ecm_model)
grangertest(first ~ second,
data = chosen_ones,
order = 3)
grangertest(second ~ first,
data = chosen_ones,
order = 3)
for(i in 1:5){
print(i)
print("first ~ second")
print(grangertest(first ~ second,
data = chosen_ones,
order = i))
print(i)
print("second ~ first")
print(grangertest(second ~ first,
data = chosen_ones,
order = i))
}
VARselect(chosen_ones[,1:2], lag.max = 10) %>%
.$criteria %>%
t() %>%
as_tibble() %>%
mutate(nLags = 1:nrow(.)) %>%
kbl(digits = 3) %>%
kable_classic("striped", full_width = F)
VARselect(chosen_ones[,1:2], lag.max = 10, season = 31) %>%
.$criteria %>%
t() %>%
as_tibble() %>%
mutate(nLags = 1:nrow(.)) %>%
kbl(digits = 3) %>%
kable_classic("striped", full_width = F)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 31)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 30)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 7)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6)
summary(VAR_model_6_lags)
plot(VAR_model_6_lags)
library(xts)
library(lmtest)
library(quantmod)
library(dplyr)
library(fUnitRoots)
library(vars)
library(tseries)
library(aTSA)
library(car)
library(seasonal)
library(forecast)
library(kableExtra)
library(formattable)
library(Metrics)
library(TSEwgt)
library(tidyverse)
setwd("C:/Users/micha/OneDrive/Dokumenty/GitHub/TSA-project/")
options(scipen = 10)
source("functions/function_plot_ACF_PACF_resids.R")
source("functions/testdf.R")
data <- read.csv("data/TSA_2023_project_data_1.csv")
data_train <- data[1:970,]
data_test <- data[971:1000,]
data_train$X <- as.Date(data_train$X, format = "%Y-%m-%d")
data_test$X <- as.Date(data_test$X, format = "%Y-%m-%d")
data_train_xts <- xts(data_train[, -1], order.by = data_train$X)
data_test_xts <- xts(data_test[, -1], order.by = data_test$X)
plot(data_train_xts, col = c("black", "blue", "red", "purple", "green", "pink", "brown", "cyan", "magenta", "coral"), major.ticks = "years", grid.ticks.on = "years", grid.ticks.lty = 3, main = "Plotted time series", legend.loc = "bottomleft")
for (i in 1:10) {
print(i)
print(testdf(variable = data_train_xts[,i],
max.augmentations = 3))
}
#-4
data_train_xts_diff <- diff.xts(data_train_xts)
for (i in 1:10) {
print(i)
print(testdf(variable = data_train_xts_diff[,i],
max.augmentations = 3))
}
#1 3 4 9
data_train_xts_diff <- diff.xts(data_train_xts)
chosen_ones <- xts(order.by = data_train$X)
chosen_ones$first<- data_train_xts[,3]
chosen_ones$second<- data_train_xts[,9]
plot(chosen_ones)
testdf(variable = chosen_ones$first, max.augmentations = 3)
chosen_ones$diff_first <- diff.xts(chosen_ones$first)
chosen_ones$diff_second <- diff.xts(chosen_ones$second)
testdf(variable = chosen_ones$first, max.augmentations = 3)
testdf(variable = chosen_ones$second, max.augmentations = 3)
testdf(variable = chosen_ones$diff_second, max.augmentations = 3)
cointegration <- lm(first ~ second, data = chosen_ones)
summary(cointegration)
testdf(variable = residuals(cointegration), max.augmentations = 3)
cointegrated_series <- lag.xts(residuals(cointegration))
chosen_ones$lag_resid_coint <- cointegrated_series
plot(cointegrated_series)
testdf(variable = cointegrated_series, max.augmentations = 3)
acf(chosen_ones$diff_first,
lag.max = 36, # max lag for ACF
ylim = c(-0.1, 0.1),   # limits for the y axis - we give c(min, max)
lwd = 5,               # line width
col = "dark green",
na.action = na.pass)   # do not stop if there are missing values in the data
par(mfrow = c(2, 1))
pacf(chosen_ones$diff_first,
lag.max = 36,
lwd = 5, col = "dark green",
na.action = na.pass)
par(mfrow = c(1, 1))
arima111 <- Arima(chosen_ones$first, order = c(1, 1, 1))
coeftest(arima111)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima111)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima111), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima713 <- Arima(chosen_ones$first,
order = c(7, 1, 3),
include.constant = TRUE,
optim.control = list(maxit = 800),
optim.method = "L-BFGS-B")
arima713
coeftest(arima713)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima713)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima713), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima7115 <- Arima(chosen_ones$first, order = c(7, 1, 15))
arima7115
coeftest(arima7115)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima7115)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima7115), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima7126 <- Arima(chosen_ones$first,
order = c(7, 1, 26),
include.constant = TRUE,
optim.control = list(maxit = 800),
optim.method = "L-BFGS-B")
coeftest(arima7126)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima7126)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima7126), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima613fixed <- Arima(chosen_ones$first,
order = c(6, 1, 3),
fixed = c(NA, NA, NA, NA, NA, NA,
0, NA, NA))
coeftest(arima613fixed)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima613fixed)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima613fixed), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima5115fixed <- Arima(chosen_ones$first,
order = c(5, 1, 15),
fixed = c(0, 0, NA, 0, NA,
0,0,0,0,0,0,NA,0,0,NA,0,0,0,0,NA))
coeftest(arima5115fixed)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima5115fixed)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima5115fixed), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima614fixed <- Arima(chosen_ones$first,
order = c(6, 1, 4),
fixed = c(NA, NA, 0, NA, NA, NA,
0,NA,NA,NA))
coeftest(arima614fixed)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima614fixed)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima614fixed), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima613fixed <- Arima(chosen_ones$first,
order = c(6, 1, 3),
fixed = c(NA, NA, 0, 0, NA, NA,
0, NA, NA))
coeftest(arima613fixed)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima613fixed)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima613fixed), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima613fixed2 <- Arima(chosen_ones$first,
order = c(6, 1, 3),
fixed = c(NA, NA, 0, NA, NA, NA,
0, NA, NA))
coeftest(arima613fixed2)
par(mar = c(1, 1, 1, 1))
plot_ACF_PACF_resids(arima613fixed2)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima613fixed2), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
AIC(arima111, arima713, arima7115, arima7126,
arima613fixed, arima613fixed2, arima614fixed, arima5115fixed)
BIC(arima111, arima713, arima7115, arima7126,
arima613fixed, arima613fixed2, arima614fixed, arima5115fixed)
arima613fixed2
coeftest(arima613fixed2)
arima613fixed2_forecast <- forecast(arima613fixed2, h=30)
arima613fixed2_forecast
arima613fixed2_forecast_data <- data.frame(f_mean  = as.numeric(arima613fixed2_forecast$mean),
f_lower = as.numeric(arima613fixed2_forecast$lower[, 2]),
f_upper = as.numeric(arima613fixed2_forecast$upper[, 2]))
arima613fixed2_forecast_data_xts <- xts(arima613fixed2_forecast_data, order.by = data_test$X)
arima713_forecast <- forecast(arima713, h=30)
arima713_forecast
arima713_forecast_data <- data.frame(f_mean  = as.numeric(arima713_forecast$mean),
f_lower = as.numeric(arima713_forecast$lower[, 2]),
f_upper = as.numeric(arima713_forecast$upper[, 2]))
arima713_forecast_data_xts <- xts(arima713_forecast_data, order.by = data_test$X)
arima614fixed_forecast <- forecast(arima614fixed, h=30)
arima614fixed_forecast
arima614fixed_forecast_data <- data.frame(f_mean  = as.numeric(arima614fixed_forecast$mean),
f_lower = as.numeric(arima614fixed_forecast$lower[, 2]),
f_upper = as.numeric(arima614fixed_forecast$upper[, 2]))
arima614fixed_forecast_data_xts <- xts(arima614fixed_forecast_data, order.by = data_test$X)
data_all_xts <- rbind(data_train_xts[,3], data_test_xts[,3])
names(data_all_xts) <- "first"
ARIMA_forecasts_first <- merge(data_all_xts,
arima613fixed2_forecast_data_xts,
arima713_forecast_data_xts,
arima614fixed_forecast_data_xts)
names(ARIMA_forecasts_first) <- c("Time Series", "arima613 mean", "arima613 95% lower", "arima613 95% upper", "arima713 mean", "arima713 95% lower", "arima713 95% upper", "arima614 mean", "arima614 95% lower", "arima614 95% upper")
plot(ARIMA_forecasts_first["2020-11/",],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of chosen time series",
col = c("black", "blue", "red", "red", "green", "pink", "pink", "cyan", "magenta", "magenta"),
legend.loc = "topleft")
par(mfrow = c(2, 1))
acf(chosen_ones$diff_second,
lag.max = 36, # max lag for ACF
ylim = c(-0.1, 0.1),   # limits for the y axis - we give c(min, max)
lwd = 5,               # line width
col = "dark green",
na.action = na.pass)   # do not stop if there are missing values in the data
pacf(chosen_ones$diff_second,
lag.max = 36,
lwd = 5, col = "dark green",
na.action = na.pass)
par(mfrow = c(1, 1))
arima111_second <- Arima(chosen_ones$second, order = c(1, 1, 1))
coeftest(arima111_second)
plot_ACF_PACF_resids(arima111_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima111_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima313_second <- Arima(chosen_ones$second, order = c(3, 1, 3))
coeftest(arima313_second)
plot_ACF_PACF_resids(arima313_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima313_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima1513_second <- Arima(chosen_ones$second, order = c(15, 1, 3))
coeftest(arima1513_second)
plot_ACF_PACF_resids(arima1513_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima1513_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima312_second <- Arima(chosen_ones$second, order = c(3, 1, 2))
coeftest(arima312_second)
plot_ACF_PACF_resids(arima312_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima312_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima1513_fixed_second <- Arima(chosen_ones$second,
order = c(15, 1, 3),
fixed = c(NA, NA, NA, NA, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, NA,
NA, 0, NA))
coeftest(arima1513_fixed_second)
plot_ACF_PACF_resids(arima1513_fixed_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima1513_fixed_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
arima1513_fixed2_second <- Arima(chosen_ones$second,
order = c(15, 1, 3),
fixed = c(0, NA, NA, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, NA,
0, 0, NA))
coeftest(arima1513_fixed2_second)
plot_ACF_PACF_resids(arima1513_fixed2_second)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima1513_fixed2_second), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red', type='l')
AIC(arima111_second, arima313_second, arima1513_second, arima1513_fixed_second, arima1513_fixed2_second)
BIC(arima111_second, arima313_second, arima1513_second, arima1513_fixed_second, arima1513_fixed2_second)
arima1513_fixed_second_forecast <- forecast(arima1513_fixed_second, h=30)
arima1513_fixed_second_forecast
arima1513_fixed_second_forecast_data <- data.frame(f_mean  = as.numeric(arima1513_fixed_second_forecast$mean),
f_lower = as.numeric(arima1513_fixed_second_forecast$lower[, 2]),
f_upper = as.numeric(arima1513_fixed_second_forecast$upper[, 2]))
arima1513_fixed_second_forecast_data_xts <- xts(arima1513_fixed_second_forecast_data, order.by = data_test$X)
arima1513_fixed2_second_forecast <- forecast(arima1513_fixed2_second, h=30)
arima1513_fixed2_second_forecast
arima1513_fixed2_second_forecast_data <- data.frame(f_mean  = as.numeric(arima1513_fixed2_second_forecast$mean),
f_lower = as.numeric(arima1513_fixed2_second_forecast$lower[, 2]),
f_upper = as.numeric(arima1513_fixed2_second_forecast$upper[, 2]))
arima1513_fixed2_second_forecast_data_xts <- xts(arima1513_fixed2_second_forecast_data, order.by = data_test$X)
arima313_second_forecast <- forecast(arima313_second, h=30)
arima313_second_forecast
arima313_second_forecast_data <- data.frame(f_mean  = as.numeric(arima313_second_forecast$mean),
f_lower = as.numeric(arima313_second_forecast$lower[, 2]),
f_upper = as.numeric(arima313_second_forecast$upper[, 2]))
arima313_second_forecast_data_xts <- xts(arima313_second_forecast_data, order.by = data_test$X)
data_all_second_xts <- rbind(data_train_xts[,9], data_test_xts[,9])
names(data_all_second_xts) <- "second"
ARIMA_forecasts_second <- merge(data_all_second_xts,
arima1513_fixed_second_forecast_data_xts,
arima1513_fixed2_second_forecast_data_xts,
arima313_second_forecast_data_xts)
names(ARIMA_forecasts_second) <- c("Second Time Series", "arima1513_fixed mean", "arima1513_fixed 95% lower", "arima1513_fixed 95% upper", "arima1513_fixed2 mean", "arima1513_fixed2 95% lower", "arima1513_fixed2 95% upper", "arima313 mean", "arima313 95% lower", "arima313 95% upper")
plot(ARIMA_forecasts_second["2020-11/",],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of chosen time series",
col = c("black", "blue", "red", "red", "green", "pink", "pink", "cyan", "magenta", "magenta"),
legend.loc = "bottomleft")
ecm_model <- lm(diff_first ~ diff_second + lag_resid_coint, data = chosen_ones)
ecm_model <- lm(diff_first ~ diff_second + lag_resid_coint -1, data = chosen_ones)
summary(ecm_model)
grangertest(first ~ second,
data = chosen_ones,
order = 3)
grangertest(second ~ first,
data = chosen_ones,
order = 3)
for(i in 1:5){
print(i)
print("first ~ second")
print(grangertest(first ~ second,
data = chosen_ones,
order = i))
print(i)
print("second ~ first")
print(grangertest(second ~ first,
data = chosen_ones,
order = i))
}
VARselect(chosen_ones[,1:2], lag.max = 10) %>%
.$criteria %>%
t() %>%
as_tibble() %>%
mutate(nLags = 1:nrow(.)) %>%
kbl(digits = 3) %>%
kable_classic("striped", full_width = F)
VARselect(chosen_ones[,1:2], lag.max = 10, season = 31) %>%
.$criteria %>%
t() %>%
as_tibble() %>%
mutate(nLags = 1:nrow(.)) %>%
kbl(digits = 3) %>%
kable_classic("striped", full_width = F)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 31)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 30)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6,
season = 7)
summary(VAR_model_6_lags)
VAR_model_6_lags <- VAR(chosen_ones[,1:2],
p = 6)
summary(VAR_model_6_lags)
plot(VAR_model_6_lags)
arima7126 <- Arima(chosen_ones$first,
order = c(7, 1, 26),
include.constant = TRUE,
optim.control = list(maxit = 800),
optim.method = "L-BFGS-B")
**Second:**
